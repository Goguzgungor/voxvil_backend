generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brands {
  id             Int          @id @default(autoincrement())
  wallet_address String?      @db.VarChar
  chain_name     String?      @db.VarChar
  created_at     DateTime?    @db.Timestamp(6)
  name           String?      @db.VarChar
  secret_key     String?      @db.VarChar
  assets         assets[]
  campains       campains[]
  member_nft     member_nft[]
}

model campains {
  id           Int       @id @default(autoincrement())
  start_date   DateTime? @db.Timestamp(6)
  end_date     DateTime? @db.Timestamp(6)
  campain_name String?   @db.VarChar
  description  String?   @db.VarChar
  amount_xp    Int?
  brands_id    Int?
  brands       brands?   @relation(fields: [brands_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_campains.brands_id")
}

model vox_user {
  id             Int       @id @default(autoincrement())
  wallet_address String?   @unique(map: "vox_user_pk") @db.VarChar
  street_address String?   @db.VarChar
  created_at     DateTime? @db.Timestamp(6)
  discord        String?   @db.VarChar
  email          String?   @db.VarChar
  name           String?   @db.VarChar
  notes          String?   @db.VarChar
  phone_number   String?   @db.VarChar
  twitter        String?   @db.VarChar
  orders         orders[]
}

model assets {
  id              Int       @id @default(autoincrement())
  quantity        Int?
  category        String?   @db.VarChar
  created_at      DateTime? @db.Timestamp(6)
  description     String?   @db.VarChar
  weight          Decimal?  @db.Decimal
  price           Decimal?  @db.Decimal
  manufacturer    String?   @db.VarChar
  supplier        String?   @db.VarChar
  inventoryStatus String?   @db.VarChar
  brands_id       Int?
  lastbuy_at      DateTime? @db.Timestamp(6)
  brands          brands?   @relation(fields: [brands_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_assets.brands_id")
  orders          orders[]
}

model orders {
  id           Int       @id @default(autoincrement())
  vox_users_id Int?
  asset_id     Int?
  to_address   String?   @db.VarChar
  status       String?   @db.VarChar
  order_at     DateTime? @db.Timestamp(6)
  assets       assets?   @relation(fields: [asset_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_orders.asset_id")
  vox_user     vox_user? @relation(fields: [vox_users_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_orders.vox_users_id")
}

model member_nft {
  id         Int       @id @default(autoincrement())
  address    String?   @db.VarChar
  created_at DateTime? @db.Timestamp(6)
  brand_id   Int?
  user_id    Int?
  brands     brands?   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_member_nft.brand_id")
}
